<!-- Modal toggle -->
<button
  class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 mt-3 md:mt-0"
  type="button"
  onclick="toggleModal()"
>
  Manage Token
</button>

<!-- Main modal -->
<div
  id="authentication-modal"
  tabindex="-1"
  aria-hidden="true"
  class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] min-h-screen bg-zinc-950/30"
  style="margin: 0"
>
  <div class="relative p-4 w-full max-w-md max-h-full">
    <!-- Modal content -->
    <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
      <!-- Modal header -->
      <div
        class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600"
      >
        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
          Provide HuggingFace Token
        </h3>
        <button
          type="button"
          class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
          onclick="toggleModal()"
        >
          <svg
            class="w-3 h-3"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
          </svg>
          <span class="sr-only">Close modal</span>
        </button>
      </div>
      <!-- Modal body -->

      <div
        id="tokenAlert"
        class="flex items-center p-4 text-sm text-gray-800 border border-gray-300 rounded-lg bg-gray-50 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 mx-4 mt-3"
        role="alert"
      >
        <svg
          class="flex-shrink-0 inline w-4 h-4 me-3"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path
            d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"
          ></path>
        </svg>
        <span class="sr-only">Info</span>
        <div>
          <!--It seems that you were rate limited,--> To continue provide the
          access token of a HuggingFace account. You can login and go to <strong
            >Settings > Access Tokens then create one (they are free) and paste
            it here</strong
          >.
        </div>
      </div>

      <div class="p-4 md:p-5">
        <form id="tokenForm" class="space-y-4">
          <div>
            <label
              for="token"
              class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
              >Your token</label
            >
            <input
              type="password"
              name="token"
              id="token"
              class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
              placeholder="Token here..."
              required
            />
          </div>

          <button
            type="submit"
            class="w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            >Save</button
          >
        </form>
      </div>
    </div>
  </div>
</div>

<script defer>
  const targetElement = document.getElementById("authentication-modal");

  function toggleModal() {
    if (targetElement.classList.contains("hidden")) {
      targetElement.classList.remove("hidden");
      targetElement.classList.add("flex");
    } else {
      targetElement.classList.add("hidden");
      targetElement.classList.remove("flex");
    }
  }

  function submit() {
    const tokenElement = document.getElementById("token");

    localStorage.setItem("token", tokenElement.value);
  }

  const tokenForm = document.getElementById("tokenForm");

  tokenForm.addEventListener("submit", (e) => {
    e.preventDefault();
    submit();
    toggleModal();
  });

  const tokenInput = tokenForm.querySelector("#token");

  const prevToken = localStorage.getItem("token");
  const tokenAlert = document.getElementById("tokenAlert");

  if (prevToken) {
    tokenAlert.style.display = "none";
    tokenInput.value = prevToken;
  }
</script>
